API Reference: Client
===========

<section class="api-call" id="add" data-title="/add" markdown=1>
### /v1/client/add ###

Creates a new client and returns the details

<pre class="prettyprint"><div class="input">
    $ curl -u user:pass -d "firstname=jane&email=jane@example.com" \
    >      https://api.snapbill.com/v1/client/add.json
</div><div class="output">
    {
      "code": 200,
      "type": "item",
      "class": "client",
      "client": {
        "depth": 0,
        "id": 118641,
        "xid": "CHh:c9x",
        "state": "new",
        "number": "012",
        "name": "jane",
        "firstname": "jane",
        "surname": "",
        "company": "",
        "email": "jane@example.com",
        "cell": "",
        "country": {
          "code": "ZA",
          "iso2": "ZA",
          "iso3": "ZAF",
          "name": "South Africa"
        },
        "credit": "0.00",
        "credit_cents": 0,
        "currency": {
          "code": "ZAR",
          "format": "R%.2f",
          "state": "enabled"
        },
        "payment": "netcash",
        "payment_method": {
          "depth": 1,
          "code": "netcash",
          "name": "Netcash Collect"
        },
        "account": {
          "depth": 1,
          "id": 8673,
          "xid": "CHh:CHh",
          "username": "demo"
        },
        "totals": {
          "unpaid_invoices": "0.00",
          "unpaid_invoices_cents": 0,
          "paid_payments": "0.00",
          "paid_payments_cents": 0
        },
        "urls": {
          "statement": "https://demo.snapbill.com/statement/CHh:c9x/oyEaDKvsD49J",
          "payment": "https://demo.snapbill.com/payment/client/CHh:c9x/ycJE2zPAhUGP"
        },
        "services": []
      }
    }
</div>
</pre>
</section>

<section class="api-call" id="get" data-title="/get" markdown=1>
### /v1/client/*id*/get ###

Returns the details of a client.

<!-- eval: client_id = self.previous['client']['id'] -->
<pre class="prettyprint">
<div class="input">
    $ curl -u user:pass -d "" \
    >      https://api.snapbill.com/v1/client/<!-- client_id -->118641/get.json
</div><div class="output">
    {
      "code": 200,
      "type": "item",
      "class": "client",
      "client": {
        "depth": 0,
        "id": 118641,
        "xid": "CHh:c9x",
        "state": "new",
        "number": "012",
        "name": "jane",
        "firstname": "jane",
        "surname": "",
        "company": "",
        "email": "jane@example.com",
        "cell": "",
        "country": {
          "code": "ZA",
          "iso2": "ZA",
          "iso3": "ZAF",
          "name": "South Africa"
        },
        "credit": "0.00",
        "credit_cents": 0,
        "currency": {
          "code": "ZAR",
          "format": "R%.2f",
          "state": "enabled"
        },
        "payment": "netcash",
        "payment_method": {
          "depth": 1,
          "code": "netcash",
          "name": "Netcash Collect"
        },
        "account": {
          "depth": 1,
          "id": 8673,
          "xid": "CHh:CHh",
          "username": "demo"
        },
        "totals": {
          "unpaid_invoices": "0.00",
          "unpaid_invoices_cents": 0,
          "paid_payments": "0.00",
          "paid_payments_cents": 0
        },
        "urls": {
          "statement": "https://demo.snapbill.com/statement/CHh:c9x/oyEaDKvsD49J",
          "payment": "https://demo.snapbill.com/payment/client/CHh:c9x/ycJE2zPAhUGP"
        },
        "services": []
      }
    }
</div>
</pre>
</section>

<section class="api-call" id="update" data-title="/update" markdown=1>
### /v1/client/*id*/update ###

Updates details about the given client in the database

<pre class="prettyprint">
<div class="input">
    $ curl -u user:pass -d "company=helkom&state=suspended" \
    >      https://api.snapbill.com/v1/client/<!-- client_id -->118641/update.json
</div><div class="output">
    {
      "code": 200,
      "type": "result",
      "status": "ok"
    }
</div>
</pre>
</section>

<section class="api-call" id="add-invoice" data-title="/add_invoice" markdown=1>
### /v1/client/*id*/add_invoice ###

Add an invoice for a client. The example adds an invoice with two items.

<pre class="prettyprint">
<div class="input">
    $ curl -u user:pass -d "date=2013-01-07" \
    >   -d "description[]=rolls&unit_cost[]=1.12&quantity[]=13" \
    >   -d "description[]=chips&unit_cost[]=20&quantity[]=1" \
    >   https://api.snapbill.com/v1/client/<!-- client_id -->118641/add_invoice.json
</div><div class="output">
    {
      "code": 200,
      "type": "item",
      "class": "invoice",
      "invoice": {
        "id": 283261,
        "xid": "CHh:BFJ9",
        "created": "2012-08-16 14:54:28",
        "state": "unpaid",
        "date": "2012-08-16",
        "due_date": "2012-08-16",
        "name": "Invoice 012/0011",
        "number": "012/0011",
        "currency": {
          "code": "ZAR",
          "format": "R%.2f",
          "state": "enabled"
        },
        "subtotal": "34.56",
        "subtotal_cents": 3456,
        "taxes": [],
        "discount": "34.56",
        "total": "34.56",
        "total_cents": 3456,
        "lines": [
          {
            "id": 368615,
            "item_name": "",
            "description": "rolls",
            "unit_cost": "1.12",
            "unit_cost_cents": 112,
            "quantity": "13.00",
            "total": "14.56",
            "total_cents": 1456,
            "package": null,
            "term": null,
            "service_provider": {
              "fee": 0,
              "charged": "0"
            }
          },
          {
            "id": 368616,
            "item_name": "",
            "description": "chips",
            "unit_cost": "20.00",
            "unit_cost_cents": 2000,
            "quantity": "1.00",
            "total": "20.00",
            "total_cents": 2000,
            "package": null,
            "term": null,
            "service_provider": {
              "fee": 0,
              "charged": "0"
            }
          }
        ],
        "client": {
          "depth": 1,
          "id": 118641,
          "xid": "CHh:c9x",
          "state": "new",
          "number": "012",
          "name": "helkom (jane)",
          "firstname": "jane",
          "surname": "",
          "company": "helkom",
          "email": "jane@example.com",
          "cell": "",
          "country": {
            "code": "ZA",
            "iso2": "ZA",
            "iso3": "ZAF",
            "name": "South Africa"
          },
          "credit": "0.00",
          "credit_cents": 0,
          "currency": {
            "code": "ZAR",
            "format": "R%.2f",
            "state": "enabled"
          },
          "payment": "netcash",
          "payment_method": {
            "depth": 2,
            "code": "netcash",
            "name": "Netcash Collect"
          },
          "account": {
            "depth": 1,
            "id": 8673,
            "xid": "CHh:CHh",
            "username": "demo"
          },
          "totals": {
            "unpaid_invoices": "34.56",
            "unpaid_invoices_cents": 3456,
            "paid_payments": "0.00",
            "paid_payments_cents": 0
          },
          "urls": {
            "statement": "https://demo.snapbill.com/statement/CHh:c9x/oyEaDKvsD49J",
            "payment": "https://demo.snapbill.com/payment/client/CHh:c9x/ycJE2zPAhUGP"
          }
        }
      }
    }
</div>
</pre>

#### Add Invoice Parameters ####

%parameter-table
type: add
    The type of invoice to generate. The default is invoice. You can specify either quote, invoice or credit.

state: add
    The state of the invoice. The default is unpaid. You can specify either draft, unpaid, quote or credit.

date: add
    The due date shown on the invoice. This field is required.

discount: add
    A percentage discount to apply to the invoice. This field is not required.

po_number: add
    An optional purchase number to show for the invoice. This field is not required.

description[]: add
    A description for an invoice item

unit_cost[]: add
    The cost for a unit of an invoice item

quantity[]: add
    The amount of units of an invoice item
    
%%%

The invoice items can be repeated (description, unit_cost, quantity). The
first description matches up with the first unit_cost and quantity. Similarly
for the 2nd description, etc.

</section>

<section class="api-call" id="generate-invoice" data-title="/generate_invoice" markdown=1>
### /v1/client/*id*/generate_invoice ###

Generate a single invoice for a given client

<pre class="prettyprint"><div class="input">
    $ curl -u user:pass -d "" \
    >      https://api.snapbill.com/v1/client/<!-- client_id -->118641/generate_invoice.json
</div><div class="output">
    {
      "code": 200,
      "type": "result",
      "status": "ok"
    }
</div>
</pre>
</section>

<section class="api-call" id="add-service" data-title="/add_service" markdown=1>
### /v1/client/*id*/add_service ###

Adds a service to a client

<!-- eval: service_type_id = self.fetch_single('service_type', 'id') -->

<pre class="prettyprint"><div class="input">
    $ curl -u user:pass -d "service_type_id=<!-- service_type_id -->1337&package=Delicious%20Pancakes&term=1" \
    >      https://api.snapbill.com/v1/client/<!-- client_id -->118641/add_service.json
</div><div class="output">
    {
      "code": 200,
      "type": "item",
      "class": "service",
      "service": {
        "id": 115971,
        "xid": "CHh:cUD",
        "state": "new",
        "name": "Pancake Delivery",
        "created": "2012-08-16 14:54:29",
        "renewal": "2012-08-16 14:54:29",
        "package": "Delicious Pancakes",
        "term": "1",
        "data": {
          "created": "2012-08-16 14:54:29",
          "name": "Pancake Delivery",
          "package": "Delicious Pancakes",
          "renewal": "2012-08-16 14:54:29",
          "term": "1"
        },
        "service_type": {
          "id": 1337,
          "name": "Pancake Delivery"
        },
        "client": {
          "depth": 1,
          "id": 118641,
          "xid": "CHh:c9x",
          "state": "new",
          "number": "012",
          "name": "helkom (jane)",
          "firstname": "jane",
          "surname": "",
          "company": "helkom",
          "email": "jane@example.com",
          "cell": "",
          "country": {
            "code": "ZA",
            "iso2": "ZA",
            "iso3": "ZAF",
            "name": "South Africa"
          },
          "credit": "0.00",
          "credit_cents": 0,
          "currency": {
            "code": "ZAR",
            "format": "R%.2f",
            "state": "enabled"
          },
          "payment": "netcash",
          "payment_method": {
            "depth": 2,
            "code": "netcash",
            "name": "Netcash Collect"
          },
          "account": {
            "depth": 1,
            "id": 8673,
            "xid": "CHh:CHh",
            "username": "demo"
          },
          "totals": {
            "unpaid_invoices": "34.56",
            "unpaid_invoices_cents": 3456,
            "paid_payments": "0.00",
            "paid_payments_cents": 0
          },
          "urls": {
            "statement": "https://demo.snapbill.com/statement/CHh:c9x/oyEaDKvsD49J",
            "payment": "https://demo.snapbill.com/payment/client/CHh:c9x/ycJE2zPAhUGP"
          }
        }
      }
    }
</div>
</pre>

#### Add Service Parameters ####
%parameter-table
service_type_id: add
    The id of the service to add. This field is required

package: add
    The name of the package to use in the service. This field is required

term: add
    The renewal term. This field is required

data-*customfieldname*: add
    Optionally specify custom fields for a package.
    
%%%

</section>

<section class="api-call" id="set-payment" data-title="/set_payment" markdown=1>
### /v1/client/*id*/set_payment ###

Sets the payment method and details for a client. The parameters passed in
depend on the payment method. To find out the parameters visit
https://api.snapbill.com/v1/client/*id*/set_payment.json?post or
https://api.snapbill.com/v1/client/*id*/set_payment

The example below updates the payment type to other which requires no extra parameters.

<pre class="prettyprint"><div class="input">
    $ curl -u user:pass -d "payment_method_code=other" \
    >      https://api.snapbill.com/v1/client/<!-- client_id -->118641/set_payment.json
</div><div class="output">
    {
      "code": 200,
      "type": "result",
      "status": "ok"
    }
</div>
</pre>
</section>

<section class="api-call" id="delete" data-title="/delete" markdown=1>
### /v1/client/*id*/delete ###

Deletes a client from the database

<pre class="prettyprint">
<div class="input">
    $ curl -u user:pass -d "" \
    >      https://api.snapbill.com/v1/client/<!-- client_id -->118641/delete.json
</div><div class="output">
    {
      "code": 200,
      "type": "result",
      "status": "ok"
    }
</div>
</pre>
</section>

<section id="states" data-title="states" markdown=1>
### Available states ###

%state-table

new
  The state that all new clients are created in

active
  The state for a normal active client

suspended
  This client has been suspended and can no longer access any services

dead
  The client has been removed and is no longer visible through the interface

%%%
</section>

<section id="parameters" data-title="parameters" markdown=1>
### Parameter listing ###

%parameter-table
depth: get
The depth parameter signals the amount of data for the client that was provided. depth=0 is the highest level that provides full detail, while depth=2 only provides id, state, number and name

id: get
    The id of the client in the system. This is guaranteed to be unique only over a single account.

xid: get
    The xid of the client in the system. This is guaranteed to be unique over all accounts (see [Concepts - Xid](/home/concepts/xid))

state: get,update
    The state of the client in the system. The available states are *new*, *active*, *suspended* and *dead*. For more details see [States](#states).

number: add,get,update
    A unique number representing the client. *Note* that this can contain any characters instead of just numbers. If not provided to an [add](#add) call it will automatically be generated.

name: get
    Automatically generated display name for the client, based on available details (firstname, surname, company)

firstname: add,get,update
    Clients firstname. This field is required unless either **surname**, or **company** are provided.

surname: add,get,update
    Clients surname. This field is required unless either **firstname**, or **company** are provided.

company: add,get,update
    Clients company. This field is required unless either **firstname**, or **surname** are provided.

email: add,get,update
    Email address for the client. This is used as the default address for all communication and nothing can/will be sent unless it is provided or a relevant contact is added.

cell: add,get,update
    Cellphone number for the client. This is the default number for SMS communication unless a relevant contact is added.

country: get
    An object reperesenting the country the user is from. Use country_code for add or update operations.

country_code: add,update
    The ISO2 code of the country that the client is from. This is automatically detected based on IP address during a signup.

credit: get,update
    The total amount of credit on a users account. Any manual changes to this will automatically log a credit-typed payment which will appear on the clients statements (**note** this behaviour is likely to change in the future).

currency: get
    An object reperesenting the currency the client is using. Use currency_code for add or update operations.

currency_code: add,update
    The ISO 4217 code for the currency the client is currently using. This can only be updated if the client has zero unpaid invoices, no recurring services and no charges.

payment: get
    This is %deprecated%, please use payment_method_code instead

payment_method: get
    An object reperesenting the payment method the client is set to. Use payment_method_code for add or update operations.

payment_method_code: add,update
    A short code representing one of the payment methods used by SnapBill.

reseller: get
    An object representing the account that owns the client

totals: get
    An object with quick details about the finanical totals of a given account

->unpaid_invoices: get
    The total sum of the totals from unpaid invoices on the account

->total_paid: get
    The total sum of payments that are marked as paid on the account

urls: get
    An object with permalinks to access the clients details

->statement: get
    A permalink to the clients statement in the client area (includes authorization)

%%%

</section>
